# -*- python -*-

Import('env')
import os
import sys

files = [
	'BootManager.cpp',
	]

libs = [
	'core', 'lzo2', 'discio', 'bdisasm',
	'inputcommon', 'common', 'lua', 'z', 'sfml-network',
	]

if env['HAVE_WX']:
	memcardfiles = [
		'MemcardManager.cpp',
		'MemoryCards/GCMemcard.cpp',
		'WxUtils.cpp',
		]

	files += [
		'AboutDolphin.cpp',
		'ARCodeAddEdit.cpp',
		'ConfigMain.cpp',
		'Frame.cpp',
		'FrameAui.cpp',
		'FrameTools.cpp',
		'LuaWindow.cpp',
		'LogWindow.cpp',
		'GameListCtrl.cpp',
		'HotkeyDlg.cpp',
		'ISOFile.cpp',
		'ISOProperties.cpp',
		'PatchAddEdit.cpp',
		'CheatsWindow.cpp',
		'Main.cpp',
		'MemoryCards/WiiSaveCrypted.cpp',
		'NetPlay.cpp',
		'NetPlayClient.cpp',
		'NetPlayServer.cpp',
		'NetWindow.cpp',
		]

	wxlibs = [ 'debwx', 'debugger_ui_util', 'inputuicommon', 'memcard' ]
else:
	files+= [
		'MainNoGUI.cpp',
		'cmdline.c',
		]

if sys.platform == 'win32':
	files += [ "stdafx.cpp" ]
elif sys.platform == 'darwin' and not env['HAVE_WX']:
	files += [ 'cocoaApp.m' ]
	exeNoGUI = env['binary_dir'] + 'DolphinNoGUI'
elif sys.platform == 'darwin' and env['HAVE_WX']:
	exeGUI = env['binary_dir'] + 'Dolphin.app/Contents/MacOS/Dolphin'

	env.Install('#' + env['binary_dir'] + 'Dolphin.app/Contents/' +
		'Library/Frameworks/Cg.framework',
		'#Externals/Cg/Cg.framework/Cg')

	env.Install('#' + env['binary_dir'] + 'Dolphin.app/Contents/Resources/',
		'#Source/Core/DolphinWX/resources/Dolphin.icns')

	env.Plist(
		'#' + env['binary_dir'] + 'Dolphin.app/Contents/Info.plist',
		Value(dict(
			CFBundleExecutable = 'Dolphin',
			CFBundleIconFile = 'Dolphin.icns',
			CFBundleIdentifier = 'com.dolphin-emu.dolphin',
			CFBundlePackageType = 'APPL',
			CFBundleShortVersionString =
			os.popen('svnversion -n ' + Dir('#').abspath).read(),
			CFBundleVersion = '2.0',
			LSMinimumSystemVersion = '10.5.0',
			LSRequiresCarbon = True,
			))
		)
else:
	files += [ 'X11Utils.cpp' ]
	exeGUI = env['binary_dir'] + 'dolphin-emu'
	exeNoGUI = env['binary_dir'] + 'dolphin-emu-nogui'

if env['HAVE_WX']:
	env.StaticLibrary(env['local_libs'] + 'memcard', memcardfiles)
	env.Program(exeGUI, files, LIBS = env['LIBS'] + wxlibs + libs)
else:
	env.Program(exeNoGUI, files, LIBS = env['LIBS'] + libs)
